
<%= render(partial: 'shared/navigation', locals: {title: "REPORTS HOME PAGE"}) %>

<%# charts library %>
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.bundle.min.js"></script> -->

<div class="reports_box">
  <div class="report_top">
    <div style="padding-left:30px;">
      <a href="<%=reports_home_path(format: :csv)%>">
          <button type="button" class="btn btn-success">Download CSV Report</button>
      </a>
    </div>
  </div>

  <div class="report_sub_title">
    <div class="title_box">
      COLLECTIONS VIEW
    </div>
    <div>
      DAAC NAME
    </div>
  </div>

  <div class="stats_area">
    

    <div class="ingest_section">
        <%= render(partial: 'title_bar', locals: {title: "COLLECTIONS"}) %>
        <div class="graph_container">
          <canvas id="Chart1"></canvas>
        </div>
    </div>

    <br>

    <div class="velocity_section">
          <%= render(partial: 'title_bar', locals: {title: "COLLECTIONS QUANTITY PROGRESS"}) %>
          <div class="surrounding_box">
            <div class="velocity_graph_container">
              <canvas id="ChartVelocity"></canvas>
            </div>
          </div>
    </div>

    <br>

    <div class="quality_section">
      <div class="surrounding_box quality_box">
        <%= render(partial: 'title_bottom_bar', locals: {title: "ORIGINAL REVIEW"}) %>
        <div class="data_area">
          <div class="data_text">
            <p>NUMBER OF COLLECTION</p>
            <p>ELEMENTS REVIEWED</p>
            <p class="checked_num"><%=@original_total_checked%></p>
          </div>
          <div class="doughnut_graph_container">
            <canvas id="ChartFlagOriginal"></canvas>
          </div>
        </div>
        <div class="legend_area" id="original_quality_legend">
          <div class="legend_row">
            <div class="legend_item first_item">
              <div class="color_box green">
              </div>
              <p>ELEMENTS PASSED</p>
            </div>
            <div class="legend_item">
              <div class="color_box yellow">
              </div>
              <p>ELEMENTS WITH WARNINGS</p>
            </div>
          </div>
          <div class="legend_row">
            <div class="legend_item first_item">
              <div class="color_box blue">
              </div>
              <p>ELEMENTS NOTED</p>
            </div>
            <div class="legend_item">
              <div class="color_box red">
              </div>
              <p>ELEMENTS FAILED</p>
            </div>
          </div>
        </div>
      </div>



      <div class="surrounding_box quality_box">
        <%= render(partial: 'title_bottom_bar', locals: {title: "CURRENT STATUS"}) %>
        <div class="data_area">
          <div class="data_text">
            <p>NUMBER OF COLLECTION</p>
            <p>ELEMENTS REVIEWED</p>
            <p class="checked_num"><%=@original_total_checked%></p>
          </div>
          <div class="doughnut_graph_container">
            <canvas id="ChartFlag"></canvas>
          </div>
        </div>
        <div class="legend_area" id="original_quality_legend">
          <div class="legend_row">
            <div class="legend_item first_item">
              <div class="color_box green">
              </div>
              <p>ELEMENTS PASSED</p>
            </div>
            <div class="legend_item">
              <div class="color_box yellow">
              </div>
              <p>ELEMENTS WITH WARNINGS</p>
            </div>
          </div>
          <div class="legend_row">
            <div class="legend_item first_item">
              <div class="color_box blue">
              </div>
              <p>ELEMENTS NOTED</p>
            </div>
            <div class="legend_item">
              <div class="color_box red">
              </div>
              <p>ELEMENTS FAILED</p>
            </div>
          </div>
        </div>
        </div>
      </div>
    </div>



          <table style="width:100%; padding:5px;">
              <tr>
                <td>State of Reviews:</td> 
                <td>0 Reviews:</td>  
                <td>1 Review:</td>  
                <td>2+ Reviews:</td>  
                <td>Record Complete:</td>  
              </tr>
              <tr>
                <td>Record Counts</td>
                <td><%= @review_counts.count { |x| x == 0 }%></td>
                <td><%= @review_counts.count { |x| x == 1 }%></td>
                <td><%= (@review_counts.count { |x| x >= 2 }) - @total_completed %></td>
                <td><%= @total_completed %></td>
              <tr>
                

              </tr>
          </table>


            <br>

          <table style="width:100%; padding:5px;">
            <tr>
              <td>Top 5 Problem Elements</td>
              <td></td>
            </tr>
            <tr>
              <td>Element Name:</td>
              <td>Non Green Count:</td>
            </tr>

            <% @failing_elements_five.each do |column_name, non_green_count|%>
              <tr>
                <td><p style="font-size: <%=problem_font_size(@failing_elements_five, non_green_count)%>px"><%=column_name%></p></td>
                <td><%=non_green_count%></td>
              </tr>
            <%end%>

            </table>

            <br>

            <table style="width:100%; padding:5px;">
              <tr>
                <td>Number of Collections that been updated in CMR after a finished review:</td>  
                <td><%=@updated_count%></td>
              </tr>

              <tr>
                <td>Number of Updated Collection Reviews marked as "Done":</td>  
                <td><%=@updated_done_count%></td>
              </tr>

              <tr>
                <td>Quality of Collection Reviews marked as "Done" (high/low/avg):</td>  
                <td><%=(@original_quality_done_records.inject(0.0) { |sum, el| sum + el } / @original_quality_done_records.size).round(2)%></td>
              </tr>

              <tr>
                <td>Quality of Updated Collection Reviews marked as "Done" (high/low/avg)</td>  
                <td><%=(@quality_done_records.inject(0.0) { |sum, el| sum + el } / @quality_done_records.size).round(2)%></td>
              </tr>

            </table>
  </div>
</div>









<script type="text/javascript">
  var barOptions_stacked = {
      tooltips: {
          enabled: false
      },
      hover :{
          animationDuration:0
      },
      scales: {
          xAxes: [{
              ticks: {
                  beginAtZero:true,
                  fontFamily: "'Open Sans Bold', sans-serif",
                  fontSize:11
              },
              scaleLabel:{
                  display:false
              },
              gridLines: {
              }, 
              stacked: true
          }],
          yAxes: [{
              gridLines: {
                  display:false,
                  color: "#fff",
                  zeroLineColor: "#fff",
                  zeroLineWidth: 0
              },
              ticks: {
                  fontFamily: "'Open Sans Bold', sans-serif",
                  fontSize:11
              },
              stacked: true,
              barThickness: 50
          }]
      },
      legend:{
          display:true,
          position: "bottom"
      },
      maintainAspectRatio: false,
      
      animation: {
          onComplete: function () {
              var chartInstance = this.chart;
              var ctx = chartInstance.ctx;
              ctx.textAlign = "left";
              

              Chart.helpers.each(this.data.datasets.forEach(function (dataset, i) {
                  var meta = chartInstance.controller.getDatasetMeta(i);
                  Chart.helpers.each(meta.data.forEach(function (bar, index) {
                      data = dataset.data[index];
                      if(i==0){
                          ctx.fillStyle = "#3ab841";
                          ctx.font = "20px Open Sans";
                          ctx.fillText(data, <%= 25 + ((@collection_ingest_count.to_f / @cmr_total_collection_count) * 500) %>, bar._model.y-47);
                      } else {
                          ctx.font = "25px Open Sans";
                          ctx.fillStyle = "#3e3e40";
                          ctx.fillText(<%=@cmr_total_collection_count%>, bar._model.x+5, bar._model.y -15);
                      }
                  }),this)
              }),this);
          }
      },
      pointLabelFontFamily : "Quadon Extra Bold",
      scaleFontFamily : "Quadon Extra Bold",
  };

  var ctx = document.getElementById("Chart1");
  var myChart = new Chart(ctx, {
      type: 'horizontalBar',
      data: {
          labels: [""],

          datasets: [{
              label: "Number of Ingested Collections",
              data: [<%= @collection_ingest_count %>],
              backgroundColor: "#3ab841",
              hoverBackgroundColor: "#3ab841"
          },{
              label: "Total Number of Collections in CMR",
              data: [<%= @cmr_total_collection_count - @collection_ingest_count %>],
              backgroundColor: "#dbdcdd",
              hoverBackgroundColor: "#dbdcdd"
          }]
      },

      options: barOptions_stacked
  });
</script>





<script type="text/javascript">
  var ctx = document.getElementById("ChartVelocity");

  var data = {
      labels: <%= raw @display_months %>,
      datasets: [
          {
              label: "Completed Reviews",
              backgroundColor: [
                  'rgba(58, 184, 65, 0.3)',
                  'rgba(58, 184, 65, 0.3)',
                  'rgba(58, 184, 65, 0.3)',
                  'rgba(58, 184, 65, 0.3)',
                  'rgba(58, 184, 65, 0.4)',
                  'rgba(58, 184, 65, 0.5)',
                  'rgba(58, 184, 65, 0.6)',
                  'rgba(58, 184, 65, 0.7)',
                  'rgba(58, 184, 65, 0.8)',
                  'rgba(58, 184, 65, 0.9)',
                  'rgba(58, 184, 65, 1)'
              ],
              data: <%= @review_day_counts %>,
          }
      ]
  };

  var myChart = new Chart(ctx, {
      type: 'bar',
      data: data,

      options: {
        legend:{
          display:false
        },
        scales: {
          xAxes: [{
              barThickness: 20
          }],
          yAxes: [{
            scaleLabel: {
              display: true,
              labelString: 'Number of Completed Reviews'
            }
          }]
        },
        maintainAspectRatio: false
      }
  });
</script>



<script type="text/javascript">

          var ctx = document.getElementById("ChartFlagOriginal");

          var data = {
            labels: [
                "Red",
                "Blue",
                "Yellow",
                "Green"
            ],
            datasets: [
                {
                    data: [<%=@original_field_colors["red"]%>, <%=@original_field_colors["blue"]%>, <%=@original_field_colors["yellow"]%>, <%=@original_field_colors["green"]%>],
                    backgroundColor: [
                        "#e84a34",
                        "#1b75ae",
                        "#ffce00",
                        "#3ab841"
                    ],
                    hoverBackgroundColor: [
                        "#e84a34",
                        "#1b75ae",
                        "#ffce00",
                        "#3ab841"
                    ]
                }]
          };

          var myChart = new Chart(ctx, {
              type: 'doughnut',
              data: data,
              options: {
                legend:{
                  display:false
                },
                maintainAspectRatio: false,
                pieceLabel: {
                  mode: 'value',
                  fontStyle: 'bold'
                }
              }
            });

</script>




<script type="text/javascript">



  var ctx = document.getElementById("ChartFlag");

  var data = {
    labels: [
        "Red",
        "Blue",
        "Yellow",
        "Green"
    ],
    datasets: [
        {
            data: [<%=@field_colors["red"]%>, <%=@field_colors["blue"]%>, <%=@field_colors["yellow"]%>, <%=@field_colors["green"]%>],
            backgroundColor: [
                "#e84a34",
                "#1b75ae",
                "#ffce00",
                "#3ab841"
            ],
            hoverBackgroundColor: [
                "#e84a34",
                "#1b75ae",
                "#ffce00",
                "#3ab841"
            ]
        }]
  };

  var myChart = new Chart(ctx, {
      type: 'doughnut',
      data: data,

      options: {
                  legend:{
                    display:false
                  },
                  maintainAspectRatio: false,
                  pieceLabel: {
                    mode: 'value',
                    fontStyle: 'bold'
                  }
               }
    });
</script>
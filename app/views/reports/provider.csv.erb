<%= CSV.generate_line(["CMR DAAC Report"]) %>
<%= CSV.generate_line(["DAAC:", params[:daac]]) %>

<%= CSV.generate_line(["Total Collections in DAAC:", @cmr_total_collection_count]) %>
<%= CSV.generate_line(["Total Completed Collections:", @collection_finished_count]) %>

<%= CSV.generate_line(["Review Velocity:", "Closed in Last 30 Days:", "Last 90 Days:", "Last 180 Days:"]) %>
<%#= CSV.generate_line(["Review Counts", @review_counts[0], @review_counts[1], @review_counts[2]]) %>

<%= CSV.generate_line(["Stat:", "Original Set:", "Current Set:"]) %>
<%= CSV.generate_line(["Number of elements checked (total):", @original_metric_set.color_counts.values.sum, @metric_set.color_counts.values.sum]) %>
<%= CSV.generate_line(["Number of elements that passed:", @original_metric_set.color_counts["green"], @metric_set.color_counts["green"]]) %>
<%= CSV.generate_line(["Number of elements that failed:", @original_metric_set.color_counts["red"], @metric_set.color_counts["red"]]) %>
<%= CSV.generate_line(["Number of elements with warnings issued:", @original_metric_set.color_counts["yellow"], @metric_set.color_counts["yellow"]]) %>
<%= CSV.generate_line(["Number of elements with informational notes added:", @original_metric_set.color_counts["blue"], @metric_set.color_counts["blue"]]) %>

<%= CSV.generate_line(["Element Error Frequency"]) %>
<%= CSV.generate_line(["Element Name:", "Non Green Count:"]) %>
<% @original_metric_set.element_non_green_count.take(10).each do |column_name, non_green_count| %>
  <%= CSV.generate_line([column_name, non_green_count]) %>
<%end%>

<%= CSV.generate_line(["Number of Collections that been updated in CMR after a finished review:", @metric_set.updated_count]) %>
<%= CSV.generate_line(["Number of Updated Collection Reviews marked as Done:", @metric_set.updated_done_count]) %>

<%= CSV.generate_line(["Quality of Collection Reviews marked as Done (high/low/avg):", (@original_metric_set.quality_done_records.inject(0.0) { |sum, el| sum + el } / @original_metric_set.quality_done_records.size)]) %>
<%= CSV.generate_line(["Quality of Updated Collection Reviews marked as Done (high/low/avg)", (@metric_set.quality_done_records.inject(0.0) { |sum, el| sum + el } / @metric_set.quality_done_records.size)]) %>


<%= CSV.generate_line(["Granules Information"]) %>


<%= CSV.generate_line(["Stat:", "Original Set:", "Current Set:"]) %>
<%= CSV.generate_line(["Number of elements checked (total):", @granule_original_metric_set.color_counts.values.sum, @granule_metric_set.color_counts.values.sum]) %>
<%= CSV.generate_line(["Number of elements that passed:", @granule_original_metric_set.color_counts["green"], @granule_metric_set.color_counts["green"]]) %>
<%= CSV.generate_line(["Number of elements that failed:", @granule_original_metric_set.color_counts["red"], @granule_metric_set.color_counts["red"]]) %>
<%= CSV.generate_line(["Number of elements with warnings issued:", @granule_original_metric_set.color_counts["yellow"], @granule_metric_set.color_counts["yellow"]]) %>
<%= CSV.generate_line(["Number of elements with informational notes added:", @granule_original_metric_set.color_counts["blue"], @granule_metric_set.color_counts["blue"]]) %>

<%= CSV.generate_line(["Element Error Frequency"]) %>
<%= CSV.generate_line(["Element Name:", "Non Green Count:"]) %>
<% @granule_original_metric_set.element_non_green_count.take(10).each do |column_name, non_green_count| %>
  <%= CSV.generate_line([column_name, non_green_count]) %>
<%end%>

<%= CSV.generate_line(["Quality of Collection Reviews marked as Done (high/low/avg):", (@granule_original_metric_set.quality_done_records.inject(0.0) { |sum, el| sum + el } / @granule_original_metric_set.quality_done_records.size)]) %>
<%= CSV.generate_line(["Quality of Updated Collection Reviews marked as Done (high/low/avg)", (@granule_metric_set.quality_done_records.inject(0.0) { |sum, el| sum + el } / @granule_metric_set.quality_done_records.size)]) %>

<%= render(partial: 'navbar', locals: {page: "review", long_name: @long_name, short_name: @short_name, user_email: current_user.email}) %>

<div class="toggle_area">
  <!-- bubbles and drop down navigation -->
  <div>
    <div class="bubble_title">
      <p class="bubble_title_text">METADATA INFORMATION</p>
    </div>
    <!-- bubbles -->
    <div class="bubble_title">
      <% @bubble_data.each_with_index do | bubble, index | %>
        <% script_class = bubble[:script] ? "script" : "no_script" %>
        <% script_text_class = bubble[:script] ? "script_text" : "no_script_text" %>

        <div class="bubble inline_bubble flag_<%= bubble[:color] %> <%= script_class %>" title="<%= bubble[:field_name] %>">
          <% if bubble[:opinion] && bubble[:opinion] != "" %>
            <div class="<%= script_text_class %> bubble_opinion">2</div>
            <% else %>
            <div style="visibility: hidden;" class="<%= script_text_class %> bubble_opinion">2</div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>

  <div class="filter_row">
    <p><strong>FILTERS:</strong></p>
    <!-- slider toggles -->
    <div>
      <div class="filter_switch">
        <p>FLAGGED BY SCRIPT</p>
        <label class="switch">
          <input type="checkbox" id="script_toggle">
          <div class="slider round"></div>
        </label>
      </div>
      <div class="filter_switch">
        <p>REQUIRES 2ND OPINION</p>
        <label class="switch">
          <input type="checkbox" id="opinion_toggle">
          <div class="slider round"></div>
        </label>
      </div>
      <div class="filter_switch">
        <p>NOT COLOR CODED</p>
        <label class="switch">
          <input type="checkbox" id="color_toggle">
          <div class="slider round"></div>
        </label>
      </div>
    </div>

    <script type="text/javascript">
      //each column cells are marked with a title class so that a row can be grabbed together
      var titleList = [];
      <% @section_titles.each do |title| %>
        titleList.push("column_" + "<%=title%>");
      <% end %>

      //creating vars and setting the onchange for each toggle element.
      var scriptToggle = document.getElementById("script_toggle");
      scriptToggle.onchange = function() {
        toggleCells();
      }
      var opinionToggle = document.getElementById("opinion_toggle");
      opinionToggle.onchange = function() {
        toggleCells();
      }
      var colorToggle = document.getElementById("color_toggle");
      colorToggle.onchange = function() {
        toggleCells();
      }


      function toggleCells() {
        unhideAllCells();

        var hiddenCells = [];

        //assembling list of cells to be hidden based on iterating over the cells in each row.
        if (scriptToggle.checked == true) {
          var scriptCells = document.getElementsByClassName("script_check_cell");
          //finding all the script_cells which have the check icon.
          for (let index in scriptCells) {
            if (scriptIsChecked(scriptCells[parseInt(index)])) {
              hiddenCells.push(parseInt(index));
            }
          }
        }

        var opinionToggle = document.getElementById("opinion_toggle");
        if (opinionToggle.checked == true) {
          var opinionCells = document.getElementsByClassName("opinion_cell");
          //finding all the script_cells which have the check icon.
          for (let index in opinionCells) {
            if (opinionIsChecked(opinionCells[parseInt(index)])) {
              hiddenCells.push(parseInt(index));
            }
          }
        }

        var colorToggle = document.getElementById("color_toggle");
        if (colorToggle.checked == true) {
          var colorCells = document.getElementsByClassName("color_code_cell");
          //finding all the script_cells which have the check icon.
          for (let index in colorCells) {
            if (colorIsChecked(colorCells[parseInt(index)])) {
              hiddenCells.push(parseInt(index));
            }
          }
        }

        //checking if all the table cells are hidden. True if cells to hide.length == totalCells.length
        uniqueHidden = hiddenCells.filter(function(item, pos) {
            return hiddenCells.indexOf(item) == pos;
        });
        if (uniqueHidden.length == titleList.length) {
          document.getElementById("scroll_table").style.display = "none";
        }


        //hiding each column individually
        for (let columnNum of hiddenCells) {
          var hideCells = document.getElementsByClassName(titleList[columnNum]);
          for (let cell of hideCells) {
            cell.style.display = "none";
          }
        }

        //resetting the discussion <th> field height;
        adjustDiscussionCellHeight();
          
      }

      function unhideAllCells() {
          document.getElementById("scroll_table").style.display = "block";

          for (let index in titleList) {
            var showCells = document.getElementsByClassName(titleList[parseInt(index)]);
            for (let cell of showCells) {
              if (cell) {
                cell.style.display = "table-cell";  
              }
            }
          }
      }

      //functions to abstract the boolean checking of cells, these caluclations may change based on style.
      function scriptIsChecked(script_div) {
        if (!script_div) {
          return false;
        }

        if(script_div.innerHTML.includes("<i")) {
          return false;
        } else {
          return true;
        }
      }

      function opinionIsChecked(opinion_div) {
        if (!opinion_div) {
          return false;
        }
        if (opinion_div.childNodes[3].childNodes[1].style.visibility == "visible") {
          return false;
        } else {
          return true;
        }

      }

      function colorIsChecked(color_div) {
        if (!color_div) {
          return false;
        }

        if (!color_div.style.backgroundColor) {
          return false;
        } else {
          return true;
        }
      }
    </script>
      
      <div class="filter_dropdown">
        <i class="eui-icon eui-fa-unsorted"></i>
        <p>SAVE AND GO TO:</p> 
        <select class="filter_select" name="redirect_index" id="section_select" form="field_form">
          <% @navigation_list.each_with_index do |data_section, index_count| %>
            <option value="<%=index_count%>"><%= data_section %></option>
          <% end %>
        </select>  
      </div>



    <script type="text/javascript">
      let section_select = document.getElementById("section_select");
      section_select.options[<%=params["section_index"].to_i %>].selected = true;
      section_select.onchange = function () {
        document.getElementById("field_form").submit();  
      };
    </script>

  </div>

  <div class="clearfix"></div>
</div>

<!-- Data/review area -->
<section >

    <div >
      <div class="scroll_table" id="scroll_table">

      <table >
        <tr>
        <th class="headcol"></th>

          <!-- for each of shown value list, create td for value -->
          <% @section_titles.each do |title| %>
            <td class="column_<%=title%>">
              <div class="title_text">
                <%= split_on_capitals(title) %>
              </div>
            </td>
          <% end %>
        </tr>
        <tr>
        <th class="headcol">FLAGGED BY SCRIPT</th>
          <!-- for each of shown value list, create td for value -->
          <% @section_titles.each do |title| %>
            <td class="column_<%=title%>">
              <div class="script_check_cell">
                <% if @flagged_by_script[title] %>
                  <i class="eui-icon eui-check-o"></i>
                <% end %>    
              </div>
            </td>
          <% end %>
        </tr>
        <tr>
        <th class="headcol">SCRIPT RESULT</th>
          <% @section_titles.each do |title| %>
            <td class="column_<%=title%>">
              <div><%= @script_values[title] %></div>
            </td>
          <% end %>
        </tr>
        <tr>
        <th class="headcol">PREVIOUS VALUE</th>
          <% @section_titles.each do |title| %>
            <td class="column_<%=title%>">Prev</td>
          <% end %>
        </tr>
        <tr>
        <th class="headcol">CURRENT VALUE</th>
          <% @section_titles.each do |title| %>
            <td class="column_<%=title%>">
              <div>
              <%= @current_values[title] %>    
              </div>
            </td>
          <% end %>
        </tr>


        <script type="text/javascript">
          function add_flag_click_handler(cell_id, check_id, icon_id) {
            document.getElementById(cell_id).onclick = function() {
              let checkbox = document.getElementById(check_id);
              let icon = document.getElementById(icon_id);
              if (checkbox.checked == true) {
                checkbox.checked = false;
                this.style.backgroundColor = "inherit";
                this.style.fontWeight = "normal";
                icon.style.visibility = "hidden";
              } else {
                checkbox.checked = true;
                this.style.backgroundColor = "#e7d1ff";
                this.style.fontWeight = "bold";
                icon.style.visibility = "visible";
              }
            };
          }
        </script>  

        <tr>
          <th class="headcol">FLAGS</th>
          <% @section_titles.each do |title| %>
            <% flag_hash = @flags[title] %>

            <td class="no_padding column_<%=title%>">
              <div class="flag_flexbox">
                <% ["Accessibility", "Usability", "Traceability", "Curation", "UMM Required"].each do |flag_field| %>            
                  <% cell_id = "flag_" + flag_field + "_" +  title %>
                  <% check_id = "flag_" + flag_field + "_check_" +  title %>
                  <% icon_id = "flag_" + flag_field + "_icon_" +  title %>
                  <% flag_cell_border = ((flag_field == "Usability" || flag_field == "Curation")? "flag_middle_border": "") %>
                  <div class="flag_flex_cell <%= flag_cell_border %>" id="<%= cell_id %>">
                    <input type="checkbox" id="<%= check_id %>" name="<%= check_id %>" form="field_form">
                    <p class="flag_flex_text">
                      <i id="<%= icon_id %>" class="eui-icon eui-check-o flag_icon"></i>
                      <%= flag_field %>
                    </p>
                  </div>
                  <script type="text/javascript">
                    add_flag_click_handler("<%= cell_id %>","<%= check_id %>", "<%= icon_id %>");
                    <% flag_hash = @flags[title] %>
                    <% if flag_hash.include? flag_field %>
                      document.getElementById("<%= cell_id %>").style.backgroundColor = "#e7d1ff";
                      document.getElementById("<%= cell_id %>").style.fontWeight = "bold";
                      document.getElementById("<%= check_id %>").checked = true;
                      document.getElementById("<%= icon_id %>").style.visibility = "visible";
                    <% end %>
                  </script>
                <% end %>
              </div>
            </td>
          <% end %>
        </tr>


        <tr>
        <th class="headcol">RECOMMENDATION</th>
          <% @section_titles.each do |title| %>
            <td class="recommendation_cell column_<%=title%>">
              <textarea name="recommendation_<%= title %>" onchange="recommendationMonitor(this)" form="field_form"><%=@recommendations[title]%></textarea>
            </td>
          <% end %>
        </tr>

        <script type="text/javascript">
          function add_opinion_click_handler(cell_id, check_id, p_id, icon_id) {
            document.getElementById(cell_id).onclick = function() {
              let check = document.getElementById(check_id);
              if (check.checked == true) {
                document.getElementById(cell_id).style.backgroundColor = "inherit";
                check.checked = false;;
                document.getElementById(p_id).style.fontWeight = "normal";
                document.getElementById(icon_id).style.visibility = "hidden";
              } else {
                document.getElementById(cell_id).style.backgroundColor = "#e7d1ff";
                check.checked = true;
                document.getElementById(p_id).style.fontWeight = "bold";
                document.getElementById(icon_id).style.visibility = "visible";
              }
            }; 
          }
        </script>


        <tr>
        <th class="headcol second_to_final_headcol">2ND OPINION</th>
          <% @section_titles.each do |title| %>
            <td class="no_padding column_<%=title%>">
              <div id="opinion_cell_<%= title %>" class="opinion_cell">
                <input style="visibility: hidden;" type="checkbox" id="opinion_check_<%= title %>" name="opinion_check_<%= title %>" form="field_form">
                <p id="opinion_text_<%= title %>">
                  <i style="visibility:hidden;" id="opinion_icon_<%= title %>" class="eui-icon eui-check-o flag_icon"></i>
                  Requires 2nd Opinion
                </p>
              </div>  
            </td>

            <script type="text/javascript">
              add_opinion_click_handler("opinion_cell_<%= title %>", "opinion_check_<%= title %>", "opinion_text_<%= title %>", "opinion_icon_<%= title %>");
              <% if @second_opinions[title] == true %>
                document.getElementById("opinion_cell_<%= title %>").style.backgroundColor = "#e7d1ff";
                document.getElementById("opinion_check_<%= title %>").checked = true;
                document.getElementById("opinion_text_<%= title %>").style.fontWeight = "bold";
                document.getElementById("opinion_icon_<%= title %>").style.visibility = "visible";
              <% end %>
            </script>
          <% end %>
        </tr>


        <tr>
        <th class="headcol second_to_final_headcol">COLOR CODE</th>
          <% @section_titles.each do |title| %>
            <td class="color_code_cell column_<%=title%>">
              <div class="styled-select blue semi-square">
                <select onchange="update_color_backgrounds()" class="color_code_select" name="color_code_<%= title %>" id="color_code_<%= title %>" form="field_form" >
                <% selected = color_selected_list(@color_codes[title]) %>

                  <option <%= selected[0] %> value="">Select Color</option>
                  <option <%= selected[1] %> value="green">Green</option>
                  <option <%= selected[2] %> value="blue">Blue</option>
                  <option <%= selected[3] %> value="yellow">Yellow</option>
                  <option <%= selected[4] %> value="red">Red</option>
                </select>
              </div>
            </td>
          <% end %>
        </tr>
        <tr>
        <th class="headcol final_headcol">DISCUSSION &amp; JUSTIFICATION</th>
          <% @section_titles.each do |title| %>
            <td class="discussion_td column_<%=title%>">
              <div class="discussion_holder">
                <div class="new_discussion">
                  <textarea placeholder="New Comment..." name="discussion_<%= title %>" form="field_form"></textarea>  
                </div>
                
                <% messages = @discussions.select { |discussion| discussion.column_name == title }.sort { |old_comment, new_comment| new_comment.date <=> old_comment.date } %>
                <% messages.each do |message| %>
                  <div class="discussion_comment">
                    <div class="discussion_title">
                      <p><%= message.formatted_date %></p>
                      <p><%= message.user.email %> says:</p>
                    </div>
                    <div class="discussion_text">
                      <p><%= message.comment %></p>
                    </div>
                  </div>
                <% end %>
              </div>  
            </td>
          <% end %>
        </tr>
      </table>  

      </div>  
    </div>

</section>

<script type="text/javascript">
  function update_color_backgrounds() {
    let color_selects = document.getElementsByClassName("color_code_select");
    let color_cells = document.getElementsByClassName("color_code_cell");
    let counter = 0;
    while (counter < color_selects.length) {
      let color = color_selects[counter].value
      color_cells[counter].style.backgroundColor = color;
      if (color == "green" || color == "red" || color == "blue") {
        color_selects[counter].style.color = "white";
      } else {
        color_selects[counter].style.color = "black";
      }
      counter++;
    }
  }

  update_color_backgrounds();
</script>

  <% if !@marked_done %>
    <%= form_tag(record_path(id: params[:id]) , {method: "put", id: "field_form"}) do %>
    <%= hidden_field_tag(:section_index, params["section_index"]) %>
    <%= submit_tag("Save Review", class: "form_save_button") %>
    <% end %>
  <% end %>

<section class="detail_footer">

<%= render(partial: 'legend') %>

</section>


<script type="text/javascript">
//resizing the discussion header div

function adjustDiscussionCellHeight() {
    //resetting the discussion <th> field height;
    $(".headcol").each(function() { 
      $(this).css("height", $(this).siblings().outerHeight()); 
    });
}

//setting the height of the discussion <th> element on page load.
adjustDiscussionCellHeight();


function recommendationMonitor(textarea) {
  if (textarea.value.match(/^ok|Ok|OK|oK$/)) {
    let columnName = textarea.name.match(/recommendation_(.*)/)[1];
    turnColumnGreen(columnName);
  }
}

function turnColumnGreen(columnName) {
  var colorTD = document.getElementsByClassName("color_code_cell column_" + columnName)[0];
  //chaning the select value
  colorTD.childNodes[1].childNodes[1].selectedIndex = 1;
  update_color_backgrounds();
}


</script>